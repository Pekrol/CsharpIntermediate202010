    delegate bool CarFilter(Car car);

        static List<Car> FilterCars(IEnumerable<Car> cars, Func<Car, bool> filter)
        {
            var filteredCars = new List<Car>();

            foreach (var car in cars)
            {
                Console.WriteLine($"Car {car.PlateId} appear");
                if (filter(car))
                {
                    filteredCars.Add(car);
                }
            }

            return filteredCars;
        }

        static bool FilterCar(Car car)
        {
            return car.Segment == Segment.Premium;
        }

        static IEnumerable<Car> EnumerateCars()
        {
            var carsStack = new List<Car>();
            carsStack.Add(new Car { PlateId = "GDXXXX01", Price = 123.04, Segment = Segment.Family });
            carsStack.Add(new Car { PlateId = "GDXXXX02", Price = 12332.04, Segment = Segment.Premium });
            carsStack.Add(new Car { PlateId = "GDXXXX03", Price = 122323.04, Segment = Segment.Sport });

            foreach (var car in carsStack)
            {
                Thread.Sleep(1000);
                yield return car;
            }
        }

        static void ShowCarsInfo(IEnumerable<Car> cars)
        {
            foreach (var car in cars)
            {
                Console.WriteLine($"Car info: {car.PlateId}, price: {car.Price}");
            }
        }

        static IEnumerable<Car> ToColl(Car car)
        {
            yield return car;
        }